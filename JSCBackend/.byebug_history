exit
params
exit
Time.parse(interview_time, DateTime.parse(params[:interview_date]))
interview_time
Time.parse("09:00", DateTime.parse("December 9 2020"))
DateTime.parse(params[:interview_date])
DateTime.parse(param[:interview_date])
params[:interview_date]
Time.parse("09:00", DateTime.parse("December 9 2020"))
num.length
num = Time.parse(interview_time, DateTime.parse(params[:interview_date]))
n
interview_time
params[:information]
paramss[:information]
s.to_i
Date.parse(s)
Time.parse(s)
s = str.join(" ")
str
str.pop()
str.delete_at(str.index(2))
t = str[1]
d = str[0]
datetime = str[0] + str[1]
str[0] + str[1]
str[0]
str = string.split(/ /)
string[0]
${string[0]}
#{string[0]}
string[0]+string[1]
string.split(/ /)
string = n.to_s
n.split(/ /, 3)
n.split("/ /")
n.split(" ")
n.split(/ /)
n.split(//)
n.to_s
n.split(//)
n.class
n.typeof
n[0]
n = Time.parse(interview_time, DateTime.parse(params[:interview_date]))
Time.parse(interview_time, DateTime.parse(params[:interview_date]))
params[:interview_date]
interview_time = params[:interview_date].split("T")[1]
exit
Time.parse(interview_time, DateTime.parse(params[:interview_date]))
interview_time = params[:interview_date].split("T")[1]
params[:interview_date]
params
exit
params[:interview_date]
params
exit
params[:interview_date]
params
exit
params[:interview_date]
params
exit
params[:interview_date]
params
exit
contact
exit
job_application
company
contact
interview
follow_up
exit
contact
exit
contact
company
exit
params[:interview_date].split("T")[1]
"2020-12-10T11:00".split("T")
Time.parse("11:00", DateTime.parse("January 5 2021"))
Time.parse("11:00", DateTime.parse("2020-12-10"))
DateTime.parse("2020-12-10T11:00")
Time.parse("14:00", DateTime.parse("January 5 2021"))
Time.parse("14:00", DateTime.parse("January 5 2021")
Date.parse("2020-12-10T14:00:00.000Z")
Date.parse("November 23 2020")
n = 2020-12-10T11:00.to_i
Date.parse("2020-12-10T11:00")
Date.parse(params[:follow_up_date])
params[:follow_up_date]
params[:interview_date]
params[:resume_sent]
exit
job_application
contact
company
exit
job_application.errors
job_application
exit
Company.find_or_create_by(name: (params[:company_name]))
Company.find_or_create_by(name: params[:company_name])
company
exit
self.new_company
@new_company
new_company
new_company.id
exit
x.email
x.first_name
x = Contact.find_by(first_name: "Rebecca")
Contact.find_by(first_name: "Rebecca")
Contact.find_by first_name: Rebecca
Contact.find_by first_name: params[:first_name]
Contact.find_by first_name: (params[:first_name])
first
firsst
full_name
exit
"#{params[:first_name]} #{params[:last_name]}"
"#{params[:first_name]}  " " #{params[:last_name]}"
"#{params[:first_name]} +  " " + #{params[:last_name]} "
"#{params[:first_name]} +  " " + #{params[:last_name]} 
"params[:first_name] + " " + params[:last_name])"
full_name
exit
x = params[:first_name] + " " + params[:last_name]
params[:first_name] + " " + params[:last_name]
params[:first_name] + params[:last_name]
params[:first_name]
full_name
new_contact
params[:company_id]
exit
company.id
params
first
full_name
company
exit
params[:company_id]
Company.find_by name: (params[:company_id])
company
params
company
company.id
last
first
full_name
exit
full = z + " " + x
x = "Smith"
z
v
full = z + " " + v
full = "#{z} + #{v}"
full = "#{z} #{v}"
v = "Smith"
z = "Sam"
f = jina
x.id
x = Company.find_by name: (params[:company_id])
Company.find_by name: (params[:company_id])
params[:company_id]
parmas[:company_id]
:company_id
Company.find_by name: (:company_id)
company
exit
does_company_existing
exit
comp
comp.id
exit
next
exit
c
n.name
n
exit
n.name
n
n.name
n
exit
Company.name.find do |n|
Company.all
name
exit
job_application
company_id
exit
params
SELECT name FROM Company
name = params[:company_id]
Company.find do |x| x.name == params[:company_id] x.id
Company.find do |x| x.name == params[:company_id] return x.id
Company.find do |x|  
        end
            return id
                end
                    n.id
                n.name == name
            id = Company.find do |n|
        def find_company
def find_company
name = params[:company_id]
exit
def find_company
params[:company_id]
        end
            return id
                end
                    n.id
                n.name == name
            id = Company.find do |n|
            name = params[:company_id] 
def find_company
        end
            return id
                end
                    n.id
                n.name == name
            id = Company.find do |n|
            name = params[:company_id] 
def find_company
params[:company_id]
params
job_application
exit
n
find_company
n
does_company_existing
exit
Company.any? { |n| n.name == "he" }
Company.any? { |n| n.name == x }
Company.include( |n| n.name == x )
Company.include({ |n| n.name == x })
Company.include { |n| n.name == x }
Company.include { |n| n.name == params[:company_id]}
x
exit
s
s = Company.find{ |n| n.name == "flaron" }
Company.find{ |n| n.name == params[:company_id] }
params[:company_id]
params
exit
params
exit
x = Company.find{ |n| n.id == params[:company_id] }
